[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "cases simulation study",
    "section": "",
    "text": "Westphal & Zapf, 2021 investigated different multiple comparison procedures (MCPs) for a certain type of analyis (e.g.) relevant in diagnostic accuracy studies, the so-called co-primary endpoint analysis.\nThe R package cases contains user-friendly implementations of these MCPs.\nThis R project cases_simstudy contains a reproducible description of the implementation and results of this simulation study in form of a quarto book.\nThis report is not meant to a standalone resource but rather should be read in addition to the main paper.\n\n\n\nWestphal, Max, and Antonia Zapf. “Statistical Inference for Diagnostic Test Accuracy Studies with Multiple Comparisons.” arXiv preprint arXiv:2105.13469 (2021)."
  },
  {
    "objectID": "1_implementation.html",
    "href": "1_implementation.html",
    "title": "1  Implementation",
    "section": "",
    "text": "The cases package provides the direct implementation all the multiple comparison procedures under investigation.\nThe simulation study was conducted with the R package batchtools.\nFor generation of the synthetic binary data, the bindata package was used among others.\nVersion control of employed dependencies is handled via the renv package."
  },
  {
    "objectID": "2_analysis.html",
    "href": "2_analysis.html",
    "title": "2  Results",
    "section": "",
    "text": "TODO: delete analysis folder after this section is complete"
  },
  {
    "objectID": "1_implementation.html#reproduction",
    "href": "1_implementation.html#reproduction",
    "title": "1  Implementation",
    "section": "1.2 Reproduction",
    "text": "1.2 Reproduction\nThe required packages can be installed/loaded via\n\ninstall.packages(\"renv\")\nrenv::restore()\n\nTo reproduce the the simulation study two R scripts need to be executed\n\nR/cases_simstudy_lfc.R,\nR/cases_simstudy_roc.R\n\nIn particular for the first run, it is required to setup the directories in the PREPARATION section in each file, in particular the main.dir.\nThe simulation (problem, algorithm) parameters are specified as in the main paper."
  },
  {
    "objectID": "1_implementation.html#info",
    "href": "1_implementation.html#info",
    "title": "1  Implementation",
    "section": "1.3 Info",
    "text": "1.3 Info\nThe simulation study has been conducted (originally) with the following system specification.\n\nR.Version()\n\n$platform\n[1] \"x86_64-w64-mingw32\"\n\n$arch\n[1] \"x86_64\"\n\n$os\n[1] \"mingw32\"\n\n$crt\n[1] \"ucrt\"\n\n$system\n[1] \"x86_64, mingw32\"\n\n$status\n[1] \"\"\n\n$major\n[1] \"4\"\n\n$minor\n[1] \"2.1\"\n\n$year\n[1] \"2022\"\n\n$month\n[1] \"06\"\n\n$day\n[1] \"23\"\n\n$`svn rev`\n[1] \"82513\"\n\n$language\n[1] \"R\"\n\n$version.string\n[1] \"R version 4.2.1 (2022-06-23 ucrt)\"\n\n$nickname\n[1] \"Funny-Looking Kid\""
  },
  {
    "objectID": "2_analysis.html#simulation-study-1-lfc-setting",
    "href": "2_analysis.html#simulation-study-1-lfc-setting",
    "title": "2  Results",
    "section": "2.1 Simulation study 1: LFC setting",
    "text": "2.1 Simulation study 1: LFC setting\n\n2.1.1 Main results\n\n## process path if needed (corresponding to out.dir in \"R/cases_simstudy_lfc.R\")\ndata_lfc <- readr::read_csv2(\"E:/cases_SIM/cases_SIM_results/cases_SIM_LFC.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 2800000 Columns: 62\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (11): problem, algorithm, cortype, contrast, alternative, adjustment, tr...\ndbl (50): job.id, nrep, n, prev, m, se, sp, L, rhose, rhosp, benchmark, alph...\nlgl  (1): random\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_lfc <- data_lfc %>%\n  mutate(Adjustment = recode_factor(interaction(adjustment, pars),\n                                    \"none.list()\" = \"none\",\n                                    \"bonferroni.list()\"=\"Bonferroni\", \n                                    \"maxt.list()\" = \"maxT\",\n                                    \"mbeta.list()\" = \"mBeta\",\n                                    \"bootstrap.list(type='wild')\" = \"Bootstrap (wild)\",\n                                    \"bootstrap.list()\" = \"Bootstrap (pairs)\"))\n\ndim(data_lfc)\n\n[1] 2800000      62\n\n\n\ndata_lfc %>% \n  filter(prev==0.25, m==10, n<1000, se==0.8, cortype==\"equi\") %>%\n  filter(transformation==\"none\") %>% \n  filter(regu==\"c(1,1/2,1/4)\") %>% \n  group_by(Adjustment, n, prev, m, rhose) %>%\n  summarize(nsim=n(), rr = mean(fp > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment))+\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"FWER\") +\n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  geom_hline(yintercept=0.025, col=\"red\", lwd=2, lty=2, alpha=0.75) +\n  owntheme\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\ndata_lfc %>% \n  filter(prev==0.25, m==5, n<1000, se==0.8, cortype==\"equi\") %>%\n  filter(transformation==\"none\") %>% \n  group_by(Adjustment, n, prev, m, rhose) %>%\n  summarize(nsim=n(), rr = mean(`0.05` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\n\n2.1.2 Sensitivity analyses\n\ndata_lfc %>% \n  filter(n<1000, se==0.8, cortype==\"equi\") %>%\n  filter(transformation==\"none\") %>% \n  filter(regu==\"c(1,1/2,1/4)\") %>% \n  group_by(Adjustment, n, prev, m, rhose) %>%\n  summarize(nsim=n(), rr = mean(fp > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment))+\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"FWER\") +\n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  geom_hline(yintercept=0.025, col=\"red\", lwd=2, lty=2, alpha=0.75) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\ndata_lfc %>% \n  filter(n<1000, se==0.8, cortype==\"equi\") %>%\n  filter(transformation==\"none\") %>% \n  group_by(Adjustment, n, prev, m, rhose) %>%\n  summarize(nsim=n(), rr = mean(`0.05` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\ndata_lfc %>% \n  filter(n<1000, se==0.8, cortype==\"equi\") %>%\n  filter(transformation==\"none\") %>% \n  group_by(Adjustment, n, prev, m, rhose) %>%\n  summarize(nsim=n(), rr = mean(`0.1` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm'. You can\noverride using the `.groups` argument."
  },
  {
    "objectID": "2_analysis.html#simulation-study-2-roc-setting",
    "href": "2_analysis.html#simulation-study-2-roc-setting",
    "title": "2  Results",
    "section": "2.2 Simulation study 2: ROC setting",
    "text": "2.2 Simulation study 2: ROC setting\n\n2.2.1 Main results\n\n## process path if needed (corresponding to out.dir in \"R/cases_simstudy_roc.R\")\ndata_roc <- readr::read_csv2(\"E:/cases_SIM/cases_SIM_results/cases_SIM_ROC.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 3600000 Columns: 61\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (10): problem, algorithm, auc, contrast, alternative, adjustment, transf...\ndbl (50): job.id, nrep, n, prev, m, rhose, e, k, delta, rhosp, benchmark, al...\nlgl  (1): random\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_roc <- data_roc %>%\n  mutate(Adjustment = recode_factor(interaction(adjustment, pars),\n                                    \"none.list()\" = \"none\",\n                                    \"bonferroni.list()\"=\"Bonferroni\", \n                                    \"maxt.list()\" = \"maxT\",\n                                    \"mbeta.list()\" = \"mBeta\",\n                                    \"bootstrap.list(type='wild')\" = \"Bootstrap (wild)\",\n                                    \"bootstrap.list()\" = \"Bootstrap (pairs)\"))\n\n\ndim(data_roc)\n\n[1] 3600000      62\n\n\n\ndata_roc %>% \n  filter(prev==0.25, m==10, e==100, n<1000,\n         rhose==0.5, auc==\"seq(0.85, 0.90, length.out = 5)\") %>%\n  group_by(Adjustment, n, prev, m, rhose, auc) %>%\n  summarize(nsim=n(), rr = mean(`0` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment))+\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"FWER\") +\n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  geom_hline(yintercept=0.025, col=\"red\", lwd=2, lty=2, alpha=0.75) +\n  owntheme \n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm', 'rhose'.\nYou can override using the `.groups` argument.\n\n\n\n\n\n\ndata_roc %>% \n  filter(prev==0.25, m==10, e==100, n<1000, rhose==0.5, auc==\"seq(0.85, 0.90, length.out = 5)\") %>%\n  group_by(Adjustment, n, prev, m, rhose, e) %>%\n  summarize(nsim=n(), rr = mean(`0.1` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme \n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm', 'rhose'.\nYou can override using the `.groups` argument.\n\n\n\n\n\n\n\n2.2.2 Sensitivity analyses\n\ndata_roc %>% \n  filter(e==100, n<1000,\n         rhose==0.5, auc==\"seq(0.85, 0.90, length.out = 5)\") %>%\n  group_by(Adjustment, n, prev, m, rhose, auc) %>%\n  summarize(nsim=n(), rr = mean(`0` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment))+\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"FWER\") +\n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  geom_hline(yintercept=0.025, col=\"red\", lwd=2, lty=2, alpha=0.75) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm', 'rhose'.\nYou can override using the `.groups` argument.\n\n\n\n\n\n\ndata_roc %>% \n  filter(e==100, n<1000, rhose==0.5, auc==\"seq(0.85, 0.90, length.out = 5)\") %>%\n  group_by(Adjustment, n, prev, m, rhose, e) %>%\n  summarize(nsim=n(), rr = mean(`0.1` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm', 'rhose'.\nYou can override using the `.groups` argument.\n\n\n\n\n\n\ndata_roc %>% \n  filter(e==100, n<1000, rhose==0.5, auc==\"seq(0.85, 0.90, length.out = 5)\") %>%\n  group_by(Adjustment, n, prev, m, rhose, e) %>%\n  summarize(nsim=n(), rr = mean(`0.1` > 0)) %>%\n  ggplot(aes(n, rr, col=Adjustment, fill=Adjustment, pch=Adjustment)) +\n  geom_point(size=6, alpha=0.6) +\n  geom_line(size=2, alpha=0.6) +\n  xlab(\"Total sample size\") +\n  ylab(\"Power\") + \n  scale_shape_manual(values = c(21, 22, 24, 25, 23, 23)) +\n  owntheme +\n  facet_wrap(prev ~ m)\n\n`summarise()` has grouped output by 'Adjustment', 'n', 'prev', 'm', 'rhose'.\nYou can override using the `.groups` argument."
  }
]